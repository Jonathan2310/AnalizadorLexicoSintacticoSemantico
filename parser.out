Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> expression_statement
Rule 5     statement -> compound_statement
Rule 6     statement -> declaration_statement
Rule 7     statement -> for_statement
Rule 8     statement -> method_call_statement
Rule 9     expression_statement -> expression SEMICOLON
Rule 10    declaration_statement -> TYPE ID SEMICOLON
Rule 11    declaration_statement -> TYPE ID EQUALS expression SEMICOLON
Rule 12    compound_statement -> LBRACE statement_list RBRACE
Rule 13    for_statement -> FOR LPAREN assignment_expression SEMICOLON expression SEMICOLON assignment_expression RPAREN compound_statement
Rule 14    expression -> assignment_expression
Rule 15    expression -> additive_expression
Rule 16    expression -> relational_expression
Rule 17    assignment_expression -> ID EQUALS expression
Rule 18    assignment_expression -> ID PLUSPLUS
Rule 19    relational_expression -> expression LE expression
Rule 20    relational_expression -> expression LESS expression
Rule 21    relational_expression -> expression GE expression
Rule 22    relational_expression -> expression GREATER expression
Rule 23    relational_expression -> expression EQ expression
Rule 24    relational_expression -> expression NEQ expression
Rule 25    additive_expression -> additive_expression PLUS multiplicative_expression
Rule 26    additive_expression -> multiplicative_expression
Rule 27    multiplicative_expression -> multiplicative_expression TIMES primary_expression
Rule 28    multiplicative_expression -> primary_expression
Rule 29    primary_expression -> ID
Rule 30    primary_expression -> NUMBER
Rule 31    primary_expression -> FLOAT
Rule 32    primary_expression -> LPAREN expression RPAREN
Rule 33    primary_expression -> method_call
Rule 34    method_call -> ID DOT ID DOT ID LPAREN RPAREN
Rule 35    method_call -> ID DOT ID DOT ID LPAREN expression RPAREN
Rule 36    method_call_statement -> method_call SEMICOLON

Terminals, with rules where they appear

DOT                  : 34 34 35 35
EQ                   : 23
EQUALS               : 11 17
FLOAT                : 31
FOR                  : 13
GE                   : 21
GREATER              : 22
ID                   : 10 11 17 18 29 34 34 34 35 35 35
LBRACE               : 12
LE                   : 19
LESS                 : 20
LPAREN               : 13 32 34 35
NEQ                  : 24
NUMBER               : 30
PLUS                 : 25
PLUSPLUS             : 18
RBRACE               : 12
RPAREN               : 13 32 34 35
SEMICOLON            : 9 10 11 13 13 36
TIMES                : 27
TYPE                 : 10 11
error                : 

Nonterminals, with rules where they appear

additive_expression  : 15 25
assignment_expression : 13 13 14
compound_statement   : 5 13
declaration_statement : 6
expression           : 9 11 13 17 19 19 20 20 21 21 22 22 23 23 24 24 32 35
expression_statement : 4
for_statement        : 7
method_call          : 33 36
method_call_statement : 8
multiplicative_expression : 25 26 27
primary_expression   : 27 28
program              : 0
relational_expression : 16
statement            : 2 3
statement_list       : 1 2 12

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression_statement
    (5) statement -> . compound_statement
    (6) statement -> . declaration_statement
    (7) statement -> . for_statement
    (8) statement -> . method_call_statement
    (9) expression_statement -> . expression SEMICOLON
    (12) compound_statement -> . LBRACE statement_list RBRACE
    (10) declaration_statement -> . TYPE ID SEMICOLON
    (11) declaration_statement -> . TYPE ID EQUALS expression SEMICOLON
    (13) for_statement -> . FOR LPAREN assignment_expression SEMICOLON expression SEMICOLON assignment_expression RPAREN compound_statement
    (36) method_call_statement -> . method_call SEMICOLON
    (14) expression -> . assignment_expression
    (15) expression -> . additive_expression
    (16) expression -> . relational_expression
    (34) method_call -> . ID DOT ID DOT ID LPAREN RPAREN
    (35) method_call -> . ID DOT ID DOT ID LPAREN expression RPAREN
    (17) assignment_expression -> . ID EQUALS expression
    (18) assignment_expression -> . ID PLUSPLUS
    (25) additive_expression -> . additive_expression PLUS multiplicative_expression
    (26) additive_expression -> . multiplicative_expression
    (19) relational_expression -> . expression LE expression
    (20) relational_expression -> . expression LESS expression
    (21) relational_expression -> . expression GE expression
    (22) relational_expression -> . expression GREATER expression
    (23) relational_expression -> . expression EQ expression
    (24) relational_expression -> . expression NEQ expression
    (27) multiplicative_expression -> . multiplicative_expression TIMES primary_expression
    (28) multiplicative_expression -> . primary_expression
    (29) primary_expression -> . ID
    (30) primary_expression -> . NUMBER
    (31) primary_expression -> . FLOAT
    (32) primary_expression -> . LPAREN expression RPAREN
    (33) primary_expression -> . method_call

    LBRACE          shift and go to state 10
    TYPE            shift and go to state 11
    FOR             shift and go to state 13
    ID              shift and go to state 12
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    LPAREN          shift and go to state 14

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    expression_statement           shift and go to state 4
    compound_statement             shift and go to state 5
    declaration_statement          shift and go to state 6
    for_statement                  shift and go to state 7
    method_call_statement          shift and go to state 8
    expression                     shift and go to state 9
    assignment_expression          shift and go to state 15
    method_call                    shift and go to state 16
    additive_expression            shift and go to state 17
    relational_expression          shift and go to state 18
    multiplicative_expression      shift and go to state 19
    primary_expression             shift and go to state 20

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression_statement
    (5) statement -> . compound_statement
    (6) statement -> . declaration_statement
    (7) statement -> . for_statement
    (8) statement -> . method_call_statement
    (9) expression_statement -> . expression SEMICOLON
    (12) compound_statement -> . LBRACE statement_list RBRACE
    (10) declaration_statement -> . TYPE ID SEMICOLON
    (11) declaration_statement -> . TYPE ID EQUALS expression SEMICOLON
    (13) for_statement -> . FOR LPAREN assignment_expression SEMICOLON expression SEMICOLON assignment_expression RPAREN compound_statement
    (36) method_call_statement -> . method_call SEMICOLON
    (14) expression -> . assignment_expression
    (15) expression -> . additive_expression
    (16) expression -> . relational_expression
    (34) method_call -> . ID DOT ID DOT ID LPAREN RPAREN
    (35) method_call -> . ID DOT ID DOT ID LPAREN expression RPAREN
    (17) assignment_expression -> . ID EQUALS expression
    (18) assignment_expression -> . ID PLUSPLUS
    (25) additive_expression -> . additive_expression PLUS multiplicative_expression
    (26) additive_expression -> . multiplicative_expression
    (19) relational_expression -> . expression LE expression
    (20) relational_expression -> . expression LESS expression
    (21) relational_expression -> . expression GE expression
    (22) relational_expression -> . expression GREATER expression
    (23) relational_expression -> . expression EQ expression
    (24) relational_expression -> . expression NEQ expression
    (27) multiplicative_expression -> . multiplicative_expression TIMES primary_expression
    (28) multiplicative_expression -> . primary_expression
    (29) primary_expression -> . ID
    (30) primary_expression -> . NUMBER
    (31) primary_expression -> . FLOAT
    (32) primary_expression -> . LPAREN expression RPAREN
    (33) primary_expression -> . method_call

    $end            reduce using rule 1 (program -> statement_list .)
    LBRACE          shift and go to state 10
    TYPE            shift and go to state 11
    FOR             shift and go to state 13
    ID              shift and go to state 12
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    LPAREN          shift and go to state 14

    statement                      shift and go to state 23
    expression_statement           shift and go to state 4
    compound_statement             shift and go to state 5
    declaration_statement          shift and go to state 6
    for_statement                  shift and go to state 7
    method_call_statement          shift and go to state 8
    expression                     shift and go to state 9
    assignment_expression          shift and go to state 15
    method_call                    shift and go to state 16
    additive_expression            shift and go to state 17
    relational_expression          shift and go to state 18
    multiplicative_expression      shift and go to state 19
    primary_expression             shift and go to state 20

state 3

    (3) statement_list -> statement .

    LBRACE          reduce using rule 3 (statement_list -> statement .)
    TYPE            reduce using rule 3 (statement_list -> statement .)
    FOR             reduce using rule 3 (statement_list -> statement .)
    ID              reduce using rule 3 (statement_list -> statement .)
    NUMBER          reduce using rule 3 (statement_list -> statement .)
    FLOAT           reduce using rule 3 (statement_list -> statement .)
    LPAREN          reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement .)


state 4

    (4) statement -> expression_statement .

    LBRACE          reduce using rule 4 (statement -> expression_statement .)
    TYPE            reduce using rule 4 (statement -> expression_statement .)
    FOR             reduce using rule 4 (statement -> expression_statement .)
    ID              reduce using rule 4 (statement -> expression_statement .)
    NUMBER          reduce using rule 4 (statement -> expression_statement .)
    FLOAT           reduce using rule 4 (statement -> expression_statement .)
    LPAREN          reduce using rule 4 (statement -> expression_statement .)
    $end            reduce using rule 4 (statement -> expression_statement .)
    RBRACE          reduce using rule 4 (statement -> expression_statement .)


state 5

    (5) statement -> compound_statement .

    LBRACE          reduce using rule 5 (statement -> compound_statement .)
    TYPE            reduce using rule 5 (statement -> compound_statement .)
    FOR             reduce using rule 5 (statement -> compound_statement .)
    ID              reduce using rule 5 (statement -> compound_statement .)
    NUMBER          reduce using rule 5 (statement -> compound_statement .)
    FLOAT           reduce using rule 5 (statement -> compound_statement .)
    LPAREN          reduce using rule 5 (statement -> compound_statement .)
    $end            reduce using rule 5 (statement -> compound_statement .)
    RBRACE          reduce using rule 5 (statement -> compound_statement .)


state 6

    (6) statement -> declaration_statement .

    LBRACE          reduce using rule 6 (statement -> declaration_statement .)
    TYPE            reduce using rule 6 (statement -> declaration_statement .)
    FOR             reduce using rule 6 (statement -> declaration_statement .)
    ID              reduce using rule 6 (statement -> declaration_statement .)
    NUMBER          reduce using rule 6 (statement -> declaration_statement .)
    FLOAT           reduce using rule 6 (statement -> declaration_statement .)
    LPAREN          reduce using rule 6 (statement -> declaration_statement .)
    $end            reduce using rule 6 (statement -> declaration_statement .)
    RBRACE          reduce using rule 6 (statement -> declaration_statement .)


state 7

    (7) statement -> for_statement .

    LBRACE          reduce using rule 7 (statement -> for_statement .)
    TYPE            reduce using rule 7 (statement -> for_statement .)
    FOR             reduce using rule 7 (statement -> for_statement .)
    ID              reduce using rule 7 (statement -> for_statement .)
    NUMBER          reduce using rule 7 (statement -> for_statement .)
    FLOAT           reduce using rule 7 (statement -> for_statement .)
    LPAREN          reduce using rule 7 (statement -> for_statement .)
    $end            reduce using rule 7 (statement -> for_statement .)
    RBRACE          reduce using rule 7 (statement -> for_statement .)


state 8

    (8) statement -> method_call_statement .

    LBRACE          reduce using rule 8 (statement -> method_call_statement .)
    TYPE            reduce using rule 8 (statement -> method_call_statement .)
    FOR             reduce using rule 8 (statement -> method_call_statement .)
    ID              reduce using rule 8 (statement -> method_call_statement .)
    NUMBER          reduce using rule 8 (statement -> method_call_statement .)
    FLOAT           reduce using rule 8 (statement -> method_call_statement .)
    LPAREN          reduce using rule 8 (statement -> method_call_statement .)
    $end            reduce using rule 8 (statement -> method_call_statement .)
    RBRACE          reduce using rule 8 (statement -> method_call_statement .)


state 9

    (9) expression_statement -> expression . SEMICOLON
    (19) relational_expression -> expression . LE expression
    (20) relational_expression -> expression . LESS expression
    (21) relational_expression -> expression . GE expression
    (22) relational_expression -> expression . GREATER expression
    (23) relational_expression -> expression . EQ expression
    (24) relational_expression -> expression . NEQ expression

    SEMICOLON       shift and go to state 24
    LE              shift and go to state 25
    LESS            shift and go to state 26
    GE              shift and go to state 27
    GREATER         shift and go to state 28
    EQ              shift and go to state 29
    NEQ             shift and go to state 30


state 10

    (12) compound_statement -> LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression_statement
    (5) statement -> . compound_statement
    (6) statement -> . declaration_statement
    (7) statement -> . for_statement
    (8) statement -> . method_call_statement
    (9) expression_statement -> . expression SEMICOLON
    (12) compound_statement -> . LBRACE statement_list RBRACE
    (10) declaration_statement -> . TYPE ID SEMICOLON
    (11) declaration_statement -> . TYPE ID EQUALS expression SEMICOLON
    (13) for_statement -> . FOR LPAREN assignment_expression SEMICOLON expression SEMICOLON assignment_expression RPAREN compound_statement
    (36) method_call_statement -> . method_call SEMICOLON
    (14) expression -> . assignment_expression
    (15) expression -> . additive_expression
    (16) expression -> . relational_expression
    (34) method_call -> . ID DOT ID DOT ID LPAREN RPAREN
    (35) method_call -> . ID DOT ID DOT ID LPAREN expression RPAREN
    (17) assignment_expression -> . ID EQUALS expression
    (18) assignment_expression -> . ID PLUSPLUS
    (25) additive_expression -> . additive_expression PLUS multiplicative_expression
    (26) additive_expression -> . multiplicative_expression
    (19) relational_expression -> . expression LE expression
    (20) relational_expression -> . expression LESS expression
    (21) relational_expression -> . expression GE expression
    (22) relational_expression -> . expression GREATER expression
    (23) relational_expression -> . expression EQ expression
    (24) relational_expression -> . expression NEQ expression
    (27) multiplicative_expression -> . multiplicative_expression TIMES primary_expression
    (28) multiplicative_expression -> . primary_expression
    (29) primary_expression -> . ID
    (30) primary_expression -> . NUMBER
    (31) primary_expression -> . FLOAT
    (32) primary_expression -> . LPAREN expression RPAREN
    (33) primary_expression -> . method_call

    LBRACE          shift and go to state 10
    TYPE            shift and go to state 11
    FOR             shift and go to state 13
    ID              shift and go to state 12
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    LPAREN          shift and go to state 14

    statement_list                 shift and go to state 31
    statement                      shift and go to state 3
    expression_statement           shift and go to state 4
    compound_statement             shift and go to state 5
    declaration_statement          shift and go to state 6
    for_statement                  shift and go to state 7
    method_call_statement          shift and go to state 8
    expression                     shift and go to state 9
    assignment_expression          shift and go to state 15
    method_call                    shift and go to state 16
    additive_expression            shift and go to state 17
    relational_expression          shift and go to state 18
    multiplicative_expression      shift and go to state 19
    primary_expression             shift and go to state 20

state 11

    (10) declaration_statement -> TYPE . ID SEMICOLON
    (11) declaration_statement -> TYPE . ID EQUALS expression SEMICOLON

    ID              shift and go to state 32


state 12

    (34) method_call -> ID . DOT ID DOT ID LPAREN RPAREN
    (35) method_call -> ID . DOT ID DOT ID LPAREN expression RPAREN
    (17) assignment_expression -> ID . EQUALS expression
    (18) assignment_expression -> ID . PLUSPLUS
    (29) primary_expression -> ID .

    DOT             shift and go to state 33
    EQUALS          shift and go to state 34
    PLUSPLUS        shift and go to state 35
    TIMES           reduce using rule 29 (primary_expression -> ID .)
    PLUS            reduce using rule 29 (primary_expression -> ID .)
    SEMICOLON       reduce using rule 29 (primary_expression -> ID .)
    LE              reduce using rule 29 (primary_expression -> ID .)
    LESS            reduce using rule 29 (primary_expression -> ID .)
    GE              reduce using rule 29 (primary_expression -> ID .)
    GREATER         reduce using rule 29 (primary_expression -> ID .)
    EQ              reduce using rule 29 (primary_expression -> ID .)
    NEQ             reduce using rule 29 (primary_expression -> ID .)


state 13

    (13) for_statement -> FOR . LPAREN assignment_expression SEMICOLON expression SEMICOLON assignment_expression RPAREN compound_statement

    LPAREN          shift and go to state 36


state 14

    (32) primary_expression -> LPAREN . expression RPAREN
    (14) expression -> . assignment_expression
    (15) expression -> . additive_expression
    (16) expression -> . relational_expression
    (17) assignment_expression -> . ID EQUALS expression
    (18) assignment_expression -> . ID PLUSPLUS
    (25) additive_expression -> . additive_expression PLUS multiplicative_expression
    (26) additive_expression -> . multiplicative_expression
    (19) relational_expression -> . expression LE expression
    (20) relational_expression -> . expression LESS expression
    (21) relational_expression -> . expression GE expression
    (22) relational_expression -> . expression GREATER expression
    (23) relational_expression -> . expression EQ expression
    (24) relational_expression -> . expression NEQ expression
    (27) multiplicative_expression -> . multiplicative_expression TIMES primary_expression
    (28) multiplicative_expression -> . primary_expression
    (29) primary_expression -> . ID
    (30) primary_expression -> . NUMBER
    (31) primary_expression -> . FLOAT
    (32) primary_expression -> . LPAREN expression RPAREN
    (33) primary_expression -> . method_call
    (34) method_call -> . ID DOT ID DOT ID LPAREN RPAREN
    (35) method_call -> . ID DOT ID DOT ID LPAREN expression RPAREN

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    LPAREN          shift and go to state 14

    expression                     shift and go to state 37
    assignment_expression          shift and go to state 15
    additive_expression            shift and go to state 17
    relational_expression          shift and go to state 18
    multiplicative_expression      shift and go to state 19
    primary_expression             shift and go to state 20
    method_call                    shift and go to state 39

state 15

    (14) expression -> assignment_expression .

    SEMICOLON       reduce using rule 14 (expression -> assignment_expression .)
    LE              reduce using rule 14 (expression -> assignment_expression .)
    LESS            reduce using rule 14 (expression -> assignment_expression .)
    GE              reduce using rule 14 (expression -> assignment_expression .)
    GREATER         reduce using rule 14 (expression -> assignment_expression .)
    EQ              reduce using rule 14 (expression -> assignment_expression .)
    NEQ             reduce using rule 14 (expression -> assignment_expression .)
    RPAREN          reduce using rule 14 (expression -> assignment_expression .)


state 16

    (36) method_call_statement -> method_call . SEMICOLON
    (33) primary_expression -> method_call .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 40
    TIMES           reduce using rule 33 (primary_expression -> method_call .)
    PLUS            reduce using rule 33 (primary_expression -> method_call .)
    LE              reduce using rule 33 (primary_expression -> method_call .)
    LESS            reduce using rule 33 (primary_expression -> method_call .)
    GE              reduce using rule 33 (primary_expression -> method_call .)
    GREATER         reduce using rule 33 (primary_expression -> method_call .)
    EQ              reduce using rule 33 (primary_expression -> method_call .)
    NEQ             reduce using rule 33 (primary_expression -> method_call .)

  ! SEMICOLON       [ reduce using rule 33 (primary_expression -> method_call .) ]


state 17

    (15) expression -> additive_expression .
    (25) additive_expression -> additive_expression . PLUS multiplicative_expression

    SEMICOLON       reduce using rule 15 (expression -> additive_expression .)
    LE              reduce using rule 15 (expression -> additive_expression .)
    LESS            reduce using rule 15 (expression -> additive_expression .)
    GE              reduce using rule 15 (expression -> additive_expression .)
    GREATER         reduce using rule 15 (expression -> additive_expression .)
    EQ              reduce using rule 15 (expression -> additive_expression .)
    NEQ             reduce using rule 15 (expression -> additive_expression .)
    RPAREN          reduce using rule 15 (expression -> additive_expression .)
    PLUS            shift and go to state 41


state 18

    (16) expression -> relational_expression .

    SEMICOLON       reduce using rule 16 (expression -> relational_expression .)
    LE              reduce using rule 16 (expression -> relational_expression .)
    LESS            reduce using rule 16 (expression -> relational_expression .)
    GE              reduce using rule 16 (expression -> relational_expression .)
    GREATER         reduce using rule 16 (expression -> relational_expression .)
    EQ              reduce using rule 16 (expression -> relational_expression .)
    NEQ             reduce using rule 16 (expression -> relational_expression .)
    RPAREN          reduce using rule 16 (expression -> relational_expression .)


state 19

    (26) additive_expression -> multiplicative_expression .
    (27) multiplicative_expression -> multiplicative_expression . TIMES primary_expression

    PLUS            reduce using rule 26 (additive_expression -> multiplicative_expression .)
    SEMICOLON       reduce using rule 26 (additive_expression -> multiplicative_expression .)
    LE              reduce using rule 26 (additive_expression -> multiplicative_expression .)
    LESS            reduce using rule 26 (additive_expression -> multiplicative_expression .)
    GE              reduce using rule 26 (additive_expression -> multiplicative_expression .)
    GREATER         reduce using rule 26 (additive_expression -> multiplicative_expression .)
    EQ              reduce using rule 26 (additive_expression -> multiplicative_expression .)
    NEQ             reduce using rule 26 (additive_expression -> multiplicative_expression .)
    RPAREN          reduce using rule 26 (additive_expression -> multiplicative_expression .)
    TIMES           shift and go to state 42


state 20

    (28) multiplicative_expression -> primary_expression .

    TIMES           reduce using rule 28 (multiplicative_expression -> primary_expression .)
    PLUS            reduce using rule 28 (multiplicative_expression -> primary_expression .)
    SEMICOLON       reduce using rule 28 (multiplicative_expression -> primary_expression .)
    LE              reduce using rule 28 (multiplicative_expression -> primary_expression .)
    LESS            reduce using rule 28 (multiplicative_expression -> primary_expression .)
    GE              reduce using rule 28 (multiplicative_expression -> primary_expression .)
    GREATER         reduce using rule 28 (multiplicative_expression -> primary_expression .)
    EQ              reduce using rule 28 (multiplicative_expression -> primary_expression .)
    NEQ             reduce using rule 28 (multiplicative_expression -> primary_expression .)
    RPAREN          reduce using rule 28 (multiplicative_expression -> primary_expression .)


state 21

    (30) primary_expression -> NUMBER .

    TIMES           reduce using rule 30 (primary_expression -> NUMBER .)
    PLUS            reduce using rule 30 (primary_expression -> NUMBER .)
    SEMICOLON       reduce using rule 30 (primary_expression -> NUMBER .)
    LE              reduce using rule 30 (primary_expression -> NUMBER .)
    LESS            reduce using rule 30 (primary_expression -> NUMBER .)
    GE              reduce using rule 30 (primary_expression -> NUMBER .)
    GREATER         reduce using rule 30 (primary_expression -> NUMBER .)
    EQ              reduce using rule 30 (primary_expression -> NUMBER .)
    NEQ             reduce using rule 30 (primary_expression -> NUMBER .)
    RPAREN          reduce using rule 30 (primary_expression -> NUMBER .)


state 22

    (31) primary_expression -> FLOAT .

    TIMES           reduce using rule 31 (primary_expression -> FLOAT .)
    PLUS            reduce using rule 31 (primary_expression -> FLOAT .)
    SEMICOLON       reduce using rule 31 (primary_expression -> FLOAT .)
    LE              reduce using rule 31 (primary_expression -> FLOAT .)
    LESS            reduce using rule 31 (primary_expression -> FLOAT .)
    GE              reduce using rule 31 (primary_expression -> FLOAT .)
    GREATER         reduce using rule 31 (primary_expression -> FLOAT .)
    EQ              reduce using rule 31 (primary_expression -> FLOAT .)
    NEQ             reduce using rule 31 (primary_expression -> FLOAT .)
    RPAREN          reduce using rule 31 (primary_expression -> FLOAT .)


state 23

    (2) statement_list -> statement_list statement .

    LBRACE          reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE            reduce using rule 2 (statement_list -> statement_list statement .)
    FOR             reduce using rule 2 (statement_list -> statement_list statement .)
    ID              reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 2 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 2 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement_list statement .)


state 24

    (9) expression_statement -> expression SEMICOLON .

    LBRACE          reduce using rule 9 (expression_statement -> expression SEMICOLON .)
    TYPE            reduce using rule 9 (expression_statement -> expression SEMICOLON .)
    FOR             reduce using rule 9 (expression_statement -> expression SEMICOLON .)
    ID              reduce using rule 9 (expression_statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 9 (expression_statement -> expression SEMICOLON .)
    FLOAT           reduce using rule 9 (expression_statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 9 (expression_statement -> expression SEMICOLON .)
    $end            reduce using rule 9 (expression_statement -> expression SEMICOLON .)
    RBRACE          reduce using rule 9 (expression_statement -> expression SEMICOLON .)


state 25

    (19) relational_expression -> expression LE . expression
    (14) expression -> . assignment_expression
    (15) expression -> . additive_expression
    (16) expression -> . relational_expression
    (17) assignment_expression -> . ID EQUALS expression
    (18) assignment_expression -> . ID PLUSPLUS
    (25) additive_expression -> . additive_expression PLUS multiplicative_expression
    (26) additive_expression -> . multiplicative_expression
    (19) relational_expression -> . expression LE expression
    (20) relational_expression -> . expression LESS expression
    (21) relational_expression -> . expression GE expression
    (22) relational_expression -> . expression GREATER expression
    (23) relational_expression -> . expression EQ expression
    (24) relational_expression -> . expression NEQ expression
    (27) multiplicative_expression -> . multiplicative_expression TIMES primary_expression
    (28) multiplicative_expression -> . primary_expression
    (29) primary_expression -> . ID
    (30) primary_expression -> . NUMBER
    (31) primary_expression -> . FLOAT
    (32) primary_expression -> . LPAREN expression RPAREN
    (33) primary_expression -> . method_call
    (34) method_call -> . ID DOT ID DOT ID LPAREN RPAREN
    (35) method_call -> . ID DOT ID DOT ID LPAREN expression RPAREN

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    LPAREN          shift and go to state 14

    expression                     shift and go to state 43
    assignment_expression          shift and go to state 15
    additive_expression            shift and go to state 17
    relational_expression          shift and go to state 18
    multiplicative_expression      shift and go to state 19
    primary_expression             shift and go to state 20
    method_call                    shift and go to state 39

state 26

    (20) relational_expression -> expression LESS . expression
    (14) expression -> . assignment_expression
    (15) expression -> . additive_expression
    (16) expression -> . relational_expression
    (17) assignment_expression -> . ID EQUALS expression
    (18) assignment_expression -> . ID PLUSPLUS
    (25) additive_expression -> . additive_expression PLUS multiplicative_expression
    (26) additive_expression -> . multiplicative_expression
    (19) relational_expression -> . expression LE expression
    (20) relational_expression -> . expression LESS expression
    (21) relational_expression -> . expression GE expression
    (22) relational_expression -> . expression GREATER expression
    (23) relational_expression -> . expression EQ expression
    (24) relational_expression -> . expression NEQ expression
    (27) multiplicative_expression -> . multiplicative_expression TIMES primary_expression
    (28) multiplicative_expression -> . primary_expression
    (29) primary_expression -> . ID
    (30) primary_expression -> . NUMBER
    (31) primary_expression -> . FLOAT
    (32) primary_expression -> . LPAREN expression RPAREN
    (33) primary_expression -> . method_call
    (34) method_call -> . ID DOT ID DOT ID LPAREN RPAREN
    (35) method_call -> . ID DOT ID DOT ID LPAREN expression RPAREN

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    LPAREN          shift and go to state 14

    expression                     shift and go to state 44
    assignment_expression          shift and go to state 15
    additive_expression            shift and go to state 17
    relational_expression          shift and go to state 18
    multiplicative_expression      shift and go to state 19
    primary_expression             shift and go to state 20
    method_call                    shift and go to state 39

state 27

    (21) relational_expression -> expression GE . expression
    (14) expression -> . assignment_expression
    (15) expression -> . additive_expression
    (16) expression -> . relational_expression
    (17) assignment_expression -> . ID EQUALS expression
    (18) assignment_expression -> . ID PLUSPLUS
    (25) additive_expression -> . additive_expression PLUS multiplicative_expression
    (26) additive_expression -> . multiplicative_expression
    (19) relational_expression -> . expression LE expression
    (20) relational_expression -> . expression LESS expression
    (21) relational_expression -> . expression GE expression
    (22) relational_expression -> . expression GREATER expression
    (23) relational_expression -> . expression EQ expression
    (24) relational_expression -> . expression NEQ expression
    (27) multiplicative_expression -> . multiplicative_expression TIMES primary_expression
    (28) multiplicative_expression -> . primary_expression
    (29) primary_expression -> . ID
    (30) primary_expression -> . NUMBER
    (31) primary_expression -> . FLOAT
    (32) primary_expression -> . LPAREN expression RPAREN
    (33) primary_expression -> . method_call
    (34) method_call -> . ID DOT ID DOT ID LPAREN RPAREN
    (35) method_call -> . ID DOT ID DOT ID LPAREN expression RPAREN

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    LPAREN          shift and go to state 14

    expression                     shift and go to state 45
    assignment_expression          shift and go to state 15
    additive_expression            shift and go to state 17
    relational_expression          shift and go to state 18
    multiplicative_expression      shift and go to state 19
    primary_expression             shift and go to state 20
    method_call                    shift and go to state 39

state 28

    (22) relational_expression -> expression GREATER . expression
    (14) expression -> . assignment_expression
    (15) expression -> . additive_expression
    (16) expression -> . relational_expression
    (17) assignment_expression -> . ID EQUALS expression
    (18) assignment_expression -> . ID PLUSPLUS
    (25) additive_expression -> . additive_expression PLUS multiplicative_expression
    (26) additive_expression -> . multiplicative_expression
    (19) relational_expression -> . expression LE expression
    (20) relational_expression -> . expression LESS expression
    (21) relational_expression -> . expression GE expression
    (22) relational_expression -> . expression GREATER expression
    (23) relational_expression -> . expression EQ expression
    (24) relational_expression -> . expression NEQ expression
    (27) multiplicative_expression -> . multiplicative_expression TIMES primary_expression
    (28) multiplicative_expression -> . primary_expression
    (29) primary_expression -> . ID
    (30) primary_expression -> . NUMBER
    (31) primary_expression -> . FLOAT
    (32) primary_expression -> . LPAREN expression RPAREN
    (33) primary_expression -> . method_call
    (34) method_call -> . ID DOT ID DOT ID LPAREN RPAREN
    (35) method_call -> . ID DOT ID DOT ID LPAREN expression RPAREN

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    LPAREN          shift and go to state 14

    expression                     shift and go to state 46
    assignment_expression          shift and go to state 15
    additive_expression            shift and go to state 17
    relational_expression          shift and go to state 18
    multiplicative_expression      shift and go to state 19
    primary_expression             shift and go to state 20
    method_call                    shift and go to state 39

state 29

    (23) relational_expression -> expression EQ . expression
    (14) expression -> . assignment_expression
    (15) expression -> . additive_expression
    (16) expression -> . relational_expression
    (17) assignment_expression -> . ID EQUALS expression
    (18) assignment_expression -> . ID PLUSPLUS
    (25) additive_expression -> . additive_expression PLUS multiplicative_expression
    (26) additive_expression -> . multiplicative_expression
    (19) relational_expression -> . expression LE expression
    (20) relational_expression -> . expression LESS expression
    (21) relational_expression -> . expression GE expression
    (22) relational_expression -> . expression GREATER expression
    (23) relational_expression -> . expression EQ expression
    (24) relational_expression -> . expression NEQ expression
    (27) multiplicative_expression -> . multiplicative_expression TIMES primary_expression
    (28) multiplicative_expression -> . primary_expression
    (29) primary_expression -> . ID
    (30) primary_expression -> . NUMBER
    (31) primary_expression -> . FLOAT
    (32) primary_expression -> . LPAREN expression RPAREN
    (33) primary_expression -> . method_call
    (34) method_call -> . ID DOT ID DOT ID LPAREN RPAREN
    (35) method_call -> . ID DOT ID DOT ID LPAREN expression RPAREN

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    LPAREN          shift and go to state 14

    expression                     shift and go to state 47
    assignment_expression          shift and go to state 15
    additive_expression            shift and go to state 17
    relational_expression          shift and go to state 18
    multiplicative_expression      shift and go to state 19
    primary_expression             shift and go to state 20
    method_call                    shift and go to state 39

state 30

    (24) relational_expression -> expression NEQ . expression
    (14) expression -> . assignment_expression
    (15) expression -> . additive_expression
    (16) expression -> . relational_expression
    (17) assignment_expression -> . ID EQUALS expression
    (18) assignment_expression -> . ID PLUSPLUS
    (25) additive_expression -> . additive_expression PLUS multiplicative_expression
    (26) additive_expression -> . multiplicative_expression
    (19) relational_expression -> . expression LE expression
    (20) relational_expression -> . expression LESS expression
    (21) relational_expression -> . expression GE expression
    (22) relational_expression -> . expression GREATER expression
    (23) relational_expression -> . expression EQ expression
    (24) relational_expression -> . expression NEQ expression
    (27) multiplicative_expression -> . multiplicative_expression TIMES primary_expression
    (28) multiplicative_expression -> . primary_expression
    (29) primary_expression -> . ID
    (30) primary_expression -> . NUMBER
    (31) primary_expression -> . FLOAT
    (32) primary_expression -> . LPAREN expression RPAREN
    (33) primary_expression -> . method_call
    (34) method_call -> . ID DOT ID DOT ID LPAREN RPAREN
    (35) method_call -> . ID DOT ID DOT ID LPAREN expression RPAREN

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    LPAREN          shift and go to state 14

    expression                     shift and go to state 48
    assignment_expression          shift and go to state 15
    additive_expression            shift and go to state 17
    relational_expression          shift and go to state 18
    multiplicative_expression      shift and go to state 19
    primary_expression             shift and go to state 20
    method_call                    shift and go to state 39

state 31

    (12) compound_statement -> LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression_statement
    (5) statement -> . compound_statement
    (6) statement -> . declaration_statement
    (7) statement -> . for_statement
    (8) statement -> . method_call_statement
    (9) expression_statement -> . expression SEMICOLON
    (12) compound_statement -> . LBRACE statement_list RBRACE
    (10) declaration_statement -> . TYPE ID SEMICOLON
    (11) declaration_statement -> . TYPE ID EQUALS expression SEMICOLON
    (13) for_statement -> . FOR LPAREN assignment_expression SEMICOLON expression SEMICOLON assignment_expression RPAREN compound_statement
    (36) method_call_statement -> . method_call SEMICOLON
    (14) expression -> . assignment_expression
    (15) expression -> . additive_expression
    (16) expression -> . relational_expression
    (34) method_call -> . ID DOT ID DOT ID LPAREN RPAREN
    (35) method_call -> . ID DOT ID DOT ID LPAREN expression RPAREN
    (17) assignment_expression -> . ID EQUALS expression
    (18) assignment_expression -> . ID PLUSPLUS
    (25) additive_expression -> . additive_expression PLUS multiplicative_expression
    (26) additive_expression -> . multiplicative_expression
    (19) relational_expression -> . expression LE expression
    (20) relational_expression -> . expression LESS expression
    (21) relational_expression -> . expression GE expression
    (22) relational_expression -> . expression GREATER expression
    (23) relational_expression -> . expression EQ expression
    (24) relational_expression -> . expression NEQ expression
    (27) multiplicative_expression -> . multiplicative_expression TIMES primary_expression
    (28) multiplicative_expression -> . primary_expression
    (29) primary_expression -> . ID
    (30) primary_expression -> . NUMBER
    (31) primary_expression -> . FLOAT
    (32) primary_expression -> . LPAREN expression RPAREN
    (33) primary_expression -> . method_call

    RBRACE          shift and go to state 49
    LBRACE          shift and go to state 10
    TYPE            shift and go to state 11
    FOR             shift and go to state 13
    ID              shift and go to state 12
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    LPAREN          shift and go to state 14

    statement                      shift and go to state 23
    expression_statement           shift and go to state 4
    compound_statement             shift and go to state 5
    declaration_statement          shift and go to state 6
    for_statement                  shift and go to state 7
    method_call_statement          shift and go to state 8
    expression                     shift and go to state 9
    assignment_expression          shift and go to state 15
    method_call                    shift and go to state 16
    additive_expression            shift and go to state 17
    relational_expression          shift and go to state 18
    multiplicative_expression      shift and go to state 19
    primary_expression             shift and go to state 20

state 32

    (10) declaration_statement -> TYPE ID . SEMICOLON
    (11) declaration_statement -> TYPE ID . EQUALS expression SEMICOLON

    SEMICOLON       shift and go to state 50
    EQUALS          shift and go to state 51


state 33

    (34) method_call -> ID DOT . ID DOT ID LPAREN RPAREN
    (35) method_call -> ID DOT . ID DOT ID LPAREN expression RPAREN

    ID              shift and go to state 52


state 34

    (17) assignment_expression -> ID EQUALS . expression
    (14) expression -> . assignment_expression
    (15) expression -> . additive_expression
    (16) expression -> . relational_expression
    (17) assignment_expression -> . ID EQUALS expression
    (18) assignment_expression -> . ID PLUSPLUS
    (25) additive_expression -> . additive_expression PLUS multiplicative_expression
    (26) additive_expression -> . multiplicative_expression
    (19) relational_expression -> . expression LE expression
    (20) relational_expression -> . expression LESS expression
    (21) relational_expression -> . expression GE expression
    (22) relational_expression -> . expression GREATER expression
    (23) relational_expression -> . expression EQ expression
    (24) relational_expression -> . expression NEQ expression
    (27) multiplicative_expression -> . multiplicative_expression TIMES primary_expression
    (28) multiplicative_expression -> . primary_expression
    (29) primary_expression -> . ID
    (30) primary_expression -> . NUMBER
    (31) primary_expression -> . FLOAT
    (32) primary_expression -> . LPAREN expression RPAREN
    (33) primary_expression -> . method_call
    (34) method_call -> . ID DOT ID DOT ID LPAREN RPAREN
    (35) method_call -> . ID DOT ID DOT ID LPAREN expression RPAREN

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    LPAREN          shift and go to state 14

    expression                     shift and go to state 53
    assignment_expression          shift and go to state 15
    additive_expression            shift and go to state 17
    relational_expression          shift and go to state 18
    multiplicative_expression      shift and go to state 19
    primary_expression             shift and go to state 20
    method_call                    shift and go to state 39

state 35

    (18) assignment_expression -> ID PLUSPLUS .

    SEMICOLON       reduce using rule 18 (assignment_expression -> ID PLUSPLUS .)
    LE              reduce using rule 18 (assignment_expression -> ID PLUSPLUS .)
    LESS            reduce using rule 18 (assignment_expression -> ID PLUSPLUS .)
    GE              reduce using rule 18 (assignment_expression -> ID PLUSPLUS .)
    GREATER         reduce using rule 18 (assignment_expression -> ID PLUSPLUS .)
    EQ              reduce using rule 18 (assignment_expression -> ID PLUSPLUS .)
    NEQ             reduce using rule 18 (assignment_expression -> ID PLUSPLUS .)
    RPAREN          reduce using rule 18 (assignment_expression -> ID PLUSPLUS .)


state 36

    (13) for_statement -> FOR LPAREN . assignment_expression SEMICOLON expression SEMICOLON assignment_expression RPAREN compound_statement
    (17) assignment_expression -> . ID EQUALS expression
    (18) assignment_expression -> . ID PLUSPLUS

    ID              shift and go to state 55

    assignment_expression          shift and go to state 54

state 37

    (32) primary_expression -> LPAREN expression . RPAREN
    (19) relational_expression -> expression . LE expression
    (20) relational_expression -> expression . LESS expression
    (21) relational_expression -> expression . GE expression
    (22) relational_expression -> expression . GREATER expression
    (23) relational_expression -> expression . EQ expression
    (24) relational_expression -> expression . NEQ expression

    RPAREN          shift and go to state 56
    LE              shift and go to state 25
    LESS            shift and go to state 26
    GE              shift and go to state 27
    GREATER         shift and go to state 28
    EQ              shift and go to state 29
    NEQ             shift and go to state 30


state 38

    (17) assignment_expression -> ID . EQUALS expression
    (18) assignment_expression -> ID . PLUSPLUS
    (29) primary_expression -> ID .
    (34) method_call -> ID . DOT ID DOT ID LPAREN RPAREN
    (35) method_call -> ID . DOT ID DOT ID LPAREN expression RPAREN

    EQUALS          shift and go to state 34
    PLUSPLUS        shift and go to state 35
    TIMES           reduce using rule 29 (primary_expression -> ID .)
    PLUS            reduce using rule 29 (primary_expression -> ID .)
    RPAREN          reduce using rule 29 (primary_expression -> ID .)
    LE              reduce using rule 29 (primary_expression -> ID .)
    LESS            reduce using rule 29 (primary_expression -> ID .)
    GE              reduce using rule 29 (primary_expression -> ID .)
    GREATER         reduce using rule 29 (primary_expression -> ID .)
    EQ              reduce using rule 29 (primary_expression -> ID .)
    NEQ             reduce using rule 29 (primary_expression -> ID .)
    SEMICOLON       reduce using rule 29 (primary_expression -> ID .)
    DOT             shift and go to state 33


state 39

    (33) primary_expression -> method_call .

    TIMES           reduce using rule 33 (primary_expression -> method_call .)
    PLUS            reduce using rule 33 (primary_expression -> method_call .)
    RPAREN          reduce using rule 33 (primary_expression -> method_call .)
    LE              reduce using rule 33 (primary_expression -> method_call .)
    LESS            reduce using rule 33 (primary_expression -> method_call .)
    GE              reduce using rule 33 (primary_expression -> method_call .)
    GREATER         reduce using rule 33 (primary_expression -> method_call .)
    EQ              reduce using rule 33 (primary_expression -> method_call .)
    NEQ             reduce using rule 33 (primary_expression -> method_call .)
    SEMICOLON       reduce using rule 33 (primary_expression -> method_call .)


state 40

    (36) method_call_statement -> method_call SEMICOLON .

    LBRACE          reduce using rule 36 (method_call_statement -> method_call SEMICOLON .)
    TYPE            reduce using rule 36 (method_call_statement -> method_call SEMICOLON .)
    FOR             reduce using rule 36 (method_call_statement -> method_call SEMICOLON .)
    ID              reduce using rule 36 (method_call_statement -> method_call SEMICOLON .)
    NUMBER          reduce using rule 36 (method_call_statement -> method_call SEMICOLON .)
    FLOAT           reduce using rule 36 (method_call_statement -> method_call SEMICOLON .)
    LPAREN          reduce using rule 36 (method_call_statement -> method_call SEMICOLON .)
    $end            reduce using rule 36 (method_call_statement -> method_call SEMICOLON .)
    RBRACE          reduce using rule 36 (method_call_statement -> method_call SEMICOLON .)


state 41

    (25) additive_expression -> additive_expression PLUS . multiplicative_expression
    (27) multiplicative_expression -> . multiplicative_expression TIMES primary_expression
    (28) multiplicative_expression -> . primary_expression
    (29) primary_expression -> . ID
    (30) primary_expression -> . NUMBER
    (31) primary_expression -> . FLOAT
    (32) primary_expression -> . LPAREN expression RPAREN
    (33) primary_expression -> . method_call
    (34) method_call -> . ID DOT ID DOT ID LPAREN RPAREN
    (35) method_call -> . ID DOT ID DOT ID LPAREN expression RPAREN

    ID              shift and go to state 58
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    LPAREN          shift and go to state 14

    multiplicative_expression      shift and go to state 57
    primary_expression             shift and go to state 20
    method_call                    shift and go to state 39

state 42

    (27) multiplicative_expression -> multiplicative_expression TIMES . primary_expression
    (29) primary_expression -> . ID
    (30) primary_expression -> . NUMBER
    (31) primary_expression -> . FLOAT
    (32) primary_expression -> . LPAREN expression RPAREN
    (33) primary_expression -> . method_call
    (34) method_call -> . ID DOT ID DOT ID LPAREN RPAREN
    (35) method_call -> . ID DOT ID DOT ID LPAREN expression RPAREN

    ID              shift and go to state 58
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    LPAREN          shift and go to state 14

    primary_expression             shift and go to state 59
    method_call                    shift and go to state 39

state 43

    (19) relational_expression -> expression LE expression .
    (19) relational_expression -> expression . LE expression
    (20) relational_expression -> expression . LESS expression
    (21) relational_expression -> expression . GE expression
    (22) relational_expression -> expression . GREATER expression
    (23) relational_expression -> expression . EQ expression
    (24) relational_expression -> expression . NEQ expression

  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
    SEMICOLON       reduce using rule 19 (relational_expression -> expression LE expression .)
    RPAREN          reduce using rule 19 (relational_expression -> expression LE expression .)
    LE              shift and go to state 25
    LESS            shift and go to state 26
    GE              shift and go to state 27
    GREATER         shift and go to state 28
    EQ              shift and go to state 29
    NEQ             shift and go to state 30

  ! LE              [ reduce using rule 19 (relational_expression -> expression LE expression .) ]
  ! LESS            [ reduce using rule 19 (relational_expression -> expression LE expression .) ]
  ! GE              [ reduce using rule 19 (relational_expression -> expression LE expression .) ]
  ! GREATER         [ reduce using rule 19 (relational_expression -> expression LE expression .) ]
  ! EQ              [ reduce using rule 19 (relational_expression -> expression LE expression .) ]
  ! NEQ             [ reduce using rule 19 (relational_expression -> expression LE expression .) ]


state 44

    (20) relational_expression -> expression LESS expression .
    (19) relational_expression -> expression . LE expression
    (20) relational_expression -> expression . LESS expression
    (21) relational_expression -> expression . GE expression
    (22) relational_expression -> expression . GREATER expression
    (23) relational_expression -> expression . EQ expression
    (24) relational_expression -> expression . NEQ expression

  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
    SEMICOLON       reduce using rule 20 (relational_expression -> expression LESS expression .)
    RPAREN          reduce using rule 20 (relational_expression -> expression LESS expression .)
    LE              shift and go to state 25
    LESS            shift and go to state 26
    GE              shift and go to state 27
    GREATER         shift and go to state 28
    EQ              shift and go to state 29
    NEQ             shift and go to state 30

  ! LE              [ reduce using rule 20 (relational_expression -> expression LESS expression .) ]
  ! LESS            [ reduce using rule 20 (relational_expression -> expression LESS expression .) ]
  ! GE              [ reduce using rule 20 (relational_expression -> expression LESS expression .) ]
  ! GREATER         [ reduce using rule 20 (relational_expression -> expression LESS expression .) ]
  ! EQ              [ reduce using rule 20 (relational_expression -> expression LESS expression .) ]
  ! NEQ             [ reduce using rule 20 (relational_expression -> expression LESS expression .) ]


state 45

    (21) relational_expression -> expression GE expression .
    (19) relational_expression -> expression . LE expression
    (20) relational_expression -> expression . LESS expression
    (21) relational_expression -> expression . GE expression
    (22) relational_expression -> expression . GREATER expression
    (23) relational_expression -> expression . EQ expression
    (24) relational_expression -> expression . NEQ expression

  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
    SEMICOLON       reduce using rule 21 (relational_expression -> expression GE expression .)
    RPAREN          reduce using rule 21 (relational_expression -> expression GE expression .)
    LE              shift and go to state 25
    LESS            shift and go to state 26
    GE              shift and go to state 27
    GREATER         shift and go to state 28
    EQ              shift and go to state 29
    NEQ             shift and go to state 30

  ! LE              [ reduce using rule 21 (relational_expression -> expression GE expression .) ]
  ! LESS            [ reduce using rule 21 (relational_expression -> expression GE expression .) ]
  ! GE              [ reduce using rule 21 (relational_expression -> expression GE expression .) ]
  ! GREATER         [ reduce using rule 21 (relational_expression -> expression GE expression .) ]
  ! EQ              [ reduce using rule 21 (relational_expression -> expression GE expression .) ]
  ! NEQ             [ reduce using rule 21 (relational_expression -> expression GE expression .) ]


state 46

    (22) relational_expression -> expression GREATER expression .
    (19) relational_expression -> expression . LE expression
    (20) relational_expression -> expression . LESS expression
    (21) relational_expression -> expression . GE expression
    (22) relational_expression -> expression . GREATER expression
    (23) relational_expression -> expression . EQ expression
    (24) relational_expression -> expression . NEQ expression

  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
    SEMICOLON       reduce using rule 22 (relational_expression -> expression GREATER expression .)
    RPAREN          reduce using rule 22 (relational_expression -> expression GREATER expression .)
    LE              shift and go to state 25
    LESS            shift and go to state 26
    GE              shift and go to state 27
    GREATER         shift and go to state 28
    EQ              shift and go to state 29
    NEQ             shift and go to state 30

  ! LE              [ reduce using rule 22 (relational_expression -> expression GREATER expression .) ]
  ! LESS            [ reduce using rule 22 (relational_expression -> expression GREATER expression .) ]
  ! GE              [ reduce using rule 22 (relational_expression -> expression GREATER expression .) ]
  ! GREATER         [ reduce using rule 22 (relational_expression -> expression GREATER expression .) ]
  ! EQ              [ reduce using rule 22 (relational_expression -> expression GREATER expression .) ]
  ! NEQ             [ reduce using rule 22 (relational_expression -> expression GREATER expression .) ]


state 47

    (23) relational_expression -> expression EQ expression .
    (19) relational_expression -> expression . LE expression
    (20) relational_expression -> expression . LESS expression
    (21) relational_expression -> expression . GE expression
    (22) relational_expression -> expression . GREATER expression
    (23) relational_expression -> expression . EQ expression
    (24) relational_expression -> expression . NEQ expression

  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
    SEMICOLON       reduce using rule 23 (relational_expression -> expression EQ expression .)
    RPAREN          reduce using rule 23 (relational_expression -> expression EQ expression .)
    LE              shift and go to state 25
    LESS            shift and go to state 26
    GE              shift and go to state 27
    GREATER         shift and go to state 28
    EQ              shift and go to state 29
    NEQ             shift and go to state 30

  ! LE              [ reduce using rule 23 (relational_expression -> expression EQ expression .) ]
  ! LESS            [ reduce using rule 23 (relational_expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 23 (relational_expression -> expression EQ expression .) ]
  ! GREATER         [ reduce using rule 23 (relational_expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 23 (relational_expression -> expression EQ expression .) ]
  ! NEQ             [ reduce using rule 23 (relational_expression -> expression EQ expression .) ]


state 48

    (24) relational_expression -> expression NEQ expression .
    (19) relational_expression -> expression . LE expression
    (20) relational_expression -> expression . LESS expression
    (21) relational_expression -> expression . GE expression
    (22) relational_expression -> expression . GREATER expression
    (23) relational_expression -> expression . EQ expression
    (24) relational_expression -> expression . NEQ expression

  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
    SEMICOLON       reduce using rule 24 (relational_expression -> expression NEQ expression .)
    RPAREN          reduce using rule 24 (relational_expression -> expression NEQ expression .)
    LE              shift and go to state 25
    LESS            shift and go to state 26
    GE              shift and go to state 27
    GREATER         shift and go to state 28
    EQ              shift and go to state 29
    NEQ             shift and go to state 30

  ! LE              [ reduce using rule 24 (relational_expression -> expression NEQ expression .) ]
  ! LESS            [ reduce using rule 24 (relational_expression -> expression NEQ expression .) ]
  ! GE              [ reduce using rule 24 (relational_expression -> expression NEQ expression .) ]
  ! GREATER         [ reduce using rule 24 (relational_expression -> expression NEQ expression .) ]
  ! EQ              [ reduce using rule 24 (relational_expression -> expression NEQ expression .) ]
  ! NEQ             [ reduce using rule 24 (relational_expression -> expression NEQ expression .) ]


state 49

    (12) compound_statement -> LBRACE statement_list RBRACE .

    LBRACE          reduce using rule 12 (compound_statement -> LBRACE statement_list RBRACE .)
    TYPE            reduce using rule 12 (compound_statement -> LBRACE statement_list RBRACE .)
    FOR             reduce using rule 12 (compound_statement -> LBRACE statement_list RBRACE .)
    ID              reduce using rule 12 (compound_statement -> LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 12 (compound_statement -> LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 12 (compound_statement -> LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 12 (compound_statement -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 12 (compound_statement -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 12 (compound_statement -> LBRACE statement_list RBRACE .)


state 50

    (10) declaration_statement -> TYPE ID SEMICOLON .

    LBRACE          reduce using rule 10 (declaration_statement -> TYPE ID SEMICOLON .)
    TYPE            reduce using rule 10 (declaration_statement -> TYPE ID SEMICOLON .)
    FOR             reduce using rule 10 (declaration_statement -> TYPE ID SEMICOLON .)
    ID              reduce using rule 10 (declaration_statement -> TYPE ID SEMICOLON .)
    NUMBER          reduce using rule 10 (declaration_statement -> TYPE ID SEMICOLON .)
    FLOAT           reduce using rule 10 (declaration_statement -> TYPE ID SEMICOLON .)
    LPAREN          reduce using rule 10 (declaration_statement -> TYPE ID SEMICOLON .)
    $end            reduce using rule 10 (declaration_statement -> TYPE ID SEMICOLON .)
    RBRACE          reduce using rule 10 (declaration_statement -> TYPE ID SEMICOLON .)


state 51

    (11) declaration_statement -> TYPE ID EQUALS . expression SEMICOLON
    (14) expression -> . assignment_expression
    (15) expression -> . additive_expression
    (16) expression -> . relational_expression
    (17) assignment_expression -> . ID EQUALS expression
    (18) assignment_expression -> . ID PLUSPLUS
    (25) additive_expression -> . additive_expression PLUS multiplicative_expression
    (26) additive_expression -> . multiplicative_expression
    (19) relational_expression -> . expression LE expression
    (20) relational_expression -> . expression LESS expression
    (21) relational_expression -> . expression GE expression
    (22) relational_expression -> . expression GREATER expression
    (23) relational_expression -> . expression EQ expression
    (24) relational_expression -> . expression NEQ expression
    (27) multiplicative_expression -> . multiplicative_expression TIMES primary_expression
    (28) multiplicative_expression -> . primary_expression
    (29) primary_expression -> . ID
    (30) primary_expression -> . NUMBER
    (31) primary_expression -> . FLOAT
    (32) primary_expression -> . LPAREN expression RPAREN
    (33) primary_expression -> . method_call
    (34) method_call -> . ID DOT ID DOT ID LPAREN RPAREN
    (35) method_call -> . ID DOT ID DOT ID LPAREN expression RPAREN

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    LPAREN          shift and go to state 14

    expression                     shift and go to state 60
    assignment_expression          shift and go to state 15
    additive_expression            shift and go to state 17
    relational_expression          shift and go to state 18
    multiplicative_expression      shift and go to state 19
    primary_expression             shift and go to state 20
    method_call                    shift and go to state 39

state 52

    (34) method_call -> ID DOT ID . DOT ID LPAREN RPAREN
    (35) method_call -> ID DOT ID . DOT ID LPAREN expression RPAREN

    DOT             shift and go to state 61


state 53

    (17) assignment_expression -> ID EQUALS expression .
    (19) relational_expression -> expression . LE expression
    (20) relational_expression -> expression . LESS expression
    (21) relational_expression -> expression . GE expression
    (22) relational_expression -> expression . GREATER expression
    (23) relational_expression -> expression . EQ expression
    (24) relational_expression -> expression . NEQ expression

  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
    SEMICOLON       reduce using rule 17 (assignment_expression -> ID EQUALS expression .)
    RPAREN          reduce using rule 17 (assignment_expression -> ID EQUALS expression .)
    LE              shift and go to state 25
    LESS            shift and go to state 26
    GE              shift and go to state 27
    GREATER         shift and go to state 28
    EQ              shift and go to state 29
    NEQ             shift and go to state 30

  ! LE              [ reduce using rule 17 (assignment_expression -> ID EQUALS expression .) ]
  ! LESS            [ reduce using rule 17 (assignment_expression -> ID EQUALS expression .) ]
  ! GE              [ reduce using rule 17 (assignment_expression -> ID EQUALS expression .) ]
  ! GREATER         [ reduce using rule 17 (assignment_expression -> ID EQUALS expression .) ]
  ! EQ              [ reduce using rule 17 (assignment_expression -> ID EQUALS expression .) ]
  ! NEQ             [ reduce using rule 17 (assignment_expression -> ID EQUALS expression .) ]


state 54

    (13) for_statement -> FOR LPAREN assignment_expression . SEMICOLON expression SEMICOLON assignment_expression RPAREN compound_statement

    SEMICOLON       shift and go to state 62


state 55

    (17) assignment_expression -> ID . EQUALS expression
    (18) assignment_expression -> ID . PLUSPLUS

    EQUALS          shift and go to state 34
    PLUSPLUS        shift and go to state 35


state 56

    (32) primary_expression -> LPAREN expression RPAREN .

    TIMES           reduce using rule 32 (primary_expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 32 (primary_expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 32 (primary_expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 32 (primary_expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 32 (primary_expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 32 (primary_expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 32 (primary_expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 32 (primary_expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 32 (primary_expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 32 (primary_expression -> LPAREN expression RPAREN .)


state 57

    (25) additive_expression -> additive_expression PLUS multiplicative_expression .
    (27) multiplicative_expression -> multiplicative_expression . TIMES primary_expression

    PLUS            reduce using rule 25 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    SEMICOLON       reduce using rule 25 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LE              reduce using rule 25 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LESS            reduce using rule 25 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    GE              reduce using rule 25 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    GREATER         reduce using rule 25 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    EQ              reduce using rule 25 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    NEQ             reduce using rule 25 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RPAREN          reduce using rule 25 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    TIMES           shift and go to state 42


state 58

    (29) primary_expression -> ID .
    (34) method_call -> ID . DOT ID DOT ID LPAREN RPAREN
    (35) method_call -> ID . DOT ID DOT ID LPAREN expression RPAREN

    TIMES           reduce using rule 29 (primary_expression -> ID .)
    PLUS            reduce using rule 29 (primary_expression -> ID .)
    SEMICOLON       reduce using rule 29 (primary_expression -> ID .)
    LE              reduce using rule 29 (primary_expression -> ID .)
    LESS            reduce using rule 29 (primary_expression -> ID .)
    GE              reduce using rule 29 (primary_expression -> ID .)
    GREATER         reduce using rule 29 (primary_expression -> ID .)
    EQ              reduce using rule 29 (primary_expression -> ID .)
    NEQ             reduce using rule 29 (primary_expression -> ID .)
    RPAREN          reduce using rule 29 (primary_expression -> ID .)
    DOT             shift and go to state 33


state 59

    (27) multiplicative_expression -> multiplicative_expression TIMES primary_expression .

    TIMES           reduce using rule 27 (multiplicative_expression -> multiplicative_expression TIMES primary_expression .)
    PLUS            reduce using rule 27 (multiplicative_expression -> multiplicative_expression TIMES primary_expression .)
    SEMICOLON       reduce using rule 27 (multiplicative_expression -> multiplicative_expression TIMES primary_expression .)
    LE              reduce using rule 27 (multiplicative_expression -> multiplicative_expression TIMES primary_expression .)
    LESS            reduce using rule 27 (multiplicative_expression -> multiplicative_expression TIMES primary_expression .)
    GE              reduce using rule 27 (multiplicative_expression -> multiplicative_expression TIMES primary_expression .)
    GREATER         reduce using rule 27 (multiplicative_expression -> multiplicative_expression TIMES primary_expression .)
    EQ              reduce using rule 27 (multiplicative_expression -> multiplicative_expression TIMES primary_expression .)
    NEQ             reduce using rule 27 (multiplicative_expression -> multiplicative_expression TIMES primary_expression .)
    RPAREN          reduce using rule 27 (multiplicative_expression -> multiplicative_expression TIMES primary_expression .)


state 60

    (11) declaration_statement -> TYPE ID EQUALS expression . SEMICOLON
    (19) relational_expression -> expression . LE expression
    (20) relational_expression -> expression . LESS expression
    (21) relational_expression -> expression . GE expression
    (22) relational_expression -> expression . GREATER expression
    (23) relational_expression -> expression . EQ expression
    (24) relational_expression -> expression . NEQ expression

    SEMICOLON       shift and go to state 63
    LE              shift and go to state 25
    LESS            shift and go to state 26
    GE              shift and go to state 27
    GREATER         shift and go to state 28
    EQ              shift and go to state 29
    NEQ             shift and go to state 30


state 61

    (34) method_call -> ID DOT ID DOT . ID LPAREN RPAREN
    (35) method_call -> ID DOT ID DOT . ID LPAREN expression RPAREN

    ID              shift and go to state 64


state 62

    (13) for_statement -> FOR LPAREN assignment_expression SEMICOLON . expression SEMICOLON assignment_expression RPAREN compound_statement
    (14) expression -> . assignment_expression
    (15) expression -> . additive_expression
    (16) expression -> . relational_expression
    (17) assignment_expression -> . ID EQUALS expression
    (18) assignment_expression -> . ID PLUSPLUS
    (25) additive_expression -> . additive_expression PLUS multiplicative_expression
    (26) additive_expression -> . multiplicative_expression
    (19) relational_expression -> . expression LE expression
    (20) relational_expression -> . expression LESS expression
    (21) relational_expression -> . expression GE expression
    (22) relational_expression -> . expression GREATER expression
    (23) relational_expression -> . expression EQ expression
    (24) relational_expression -> . expression NEQ expression
    (27) multiplicative_expression -> . multiplicative_expression TIMES primary_expression
    (28) multiplicative_expression -> . primary_expression
    (29) primary_expression -> . ID
    (30) primary_expression -> . NUMBER
    (31) primary_expression -> . FLOAT
    (32) primary_expression -> . LPAREN expression RPAREN
    (33) primary_expression -> . method_call
    (34) method_call -> . ID DOT ID DOT ID LPAREN RPAREN
    (35) method_call -> . ID DOT ID DOT ID LPAREN expression RPAREN

    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    LPAREN          shift and go to state 14

    assignment_expression          shift and go to state 15
    expression                     shift and go to state 65
    additive_expression            shift and go to state 17
    relational_expression          shift and go to state 18
    multiplicative_expression      shift and go to state 19
    primary_expression             shift and go to state 20
    method_call                    shift and go to state 39

state 63

    (11) declaration_statement -> TYPE ID EQUALS expression SEMICOLON .

    LBRACE          reduce using rule 11 (declaration_statement -> TYPE ID EQUALS expression SEMICOLON .)
    TYPE            reduce using rule 11 (declaration_statement -> TYPE ID EQUALS expression SEMICOLON .)
    FOR             reduce using rule 11 (declaration_statement -> TYPE ID EQUALS expression SEMICOLON .)
    ID              reduce using rule 11 (declaration_statement -> TYPE ID EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 11 (declaration_statement -> TYPE ID EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 11 (declaration_statement -> TYPE ID EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 11 (declaration_statement -> TYPE ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 11 (declaration_statement -> TYPE ID EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 11 (declaration_statement -> TYPE ID EQUALS expression SEMICOLON .)


state 64

    (34) method_call -> ID DOT ID DOT ID . LPAREN RPAREN
    (35) method_call -> ID DOT ID DOT ID . LPAREN expression RPAREN

    LPAREN          shift and go to state 66


state 65

    (13) for_statement -> FOR LPAREN assignment_expression SEMICOLON expression . SEMICOLON assignment_expression RPAREN compound_statement
    (19) relational_expression -> expression . LE expression
    (20) relational_expression -> expression . LESS expression
    (21) relational_expression -> expression . GE expression
    (22) relational_expression -> expression . GREATER expression
    (23) relational_expression -> expression . EQ expression
    (24) relational_expression -> expression . NEQ expression

    SEMICOLON       shift and go to state 67
    LE              shift and go to state 25
    LESS            shift and go to state 26
    GE              shift and go to state 27
    GREATER         shift and go to state 28
    EQ              shift and go to state 29
    NEQ             shift and go to state 30


state 66

    (34) method_call -> ID DOT ID DOT ID LPAREN . RPAREN
    (35) method_call -> ID DOT ID DOT ID LPAREN . expression RPAREN
    (14) expression -> . assignment_expression
    (15) expression -> . additive_expression
    (16) expression -> . relational_expression
    (17) assignment_expression -> . ID EQUALS expression
    (18) assignment_expression -> . ID PLUSPLUS
    (25) additive_expression -> . additive_expression PLUS multiplicative_expression
    (26) additive_expression -> . multiplicative_expression
    (19) relational_expression -> . expression LE expression
    (20) relational_expression -> . expression LESS expression
    (21) relational_expression -> . expression GE expression
    (22) relational_expression -> . expression GREATER expression
    (23) relational_expression -> . expression EQ expression
    (24) relational_expression -> . expression NEQ expression
    (27) multiplicative_expression -> . multiplicative_expression TIMES primary_expression
    (28) multiplicative_expression -> . primary_expression
    (29) primary_expression -> . ID
    (30) primary_expression -> . NUMBER
    (31) primary_expression -> . FLOAT
    (32) primary_expression -> . LPAREN expression RPAREN
    (33) primary_expression -> . method_call
    (34) method_call -> . ID DOT ID DOT ID LPAREN RPAREN
    (35) method_call -> . ID DOT ID DOT ID LPAREN expression RPAREN

    RPAREN          shift and go to state 68
    ID              shift and go to state 38
    NUMBER          shift and go to state 21
    FLOAT           shift and go to state 22
    LPAREN          shift and go to state 14

    expression                     shift and go to state 69
    assignment_expression          shift and go to state 15
    additive_expression            shift and go to state 17
    relational_expression          shift and go to state 18
    multiplicative_expression      shift and go to state 19
    primary_expression             shift and go to state 20
    method_call                    shift and go to state 39

state 67

    (13) for_statement -> FOR LPAREN assignment_expression SEMICOLON expression SEMICOLON . assignment_expression RPAREN compound_statement
    (17) assignment_expression -> . ID EQUALS expression
    (18) assignment_expression -> . ID PLUSPLUS

    ID              shift and go to state 55

    assignment_expression          shift and go to state 70

state 68

    (34) method_call -> ID DOT ID DOT ID LPAREN RPAREN .

    SEMICOLON       reduce using rule 34 (method_call -> ID DOT ID DOT ID LPAREN RPAREN .)
    TIMES           reduce using rule 34 (method_call -> ID DOT ID DOT ID LPAREN RPAREN .)
    PLUS            reduce using rule 34 (method_call -> ID DOT ID DOT ID LPAREN RPAREN .)
    LE              reduce using rule 34 (method_call -> ID DOT ID DOT ID LPAREN RPAREN .)
    LESS            reduce using rule 34 (method_call -> ID DOT ID DOT ID LPAREN RPAREN .)
    GE              reduce using rule 34 (method_call -> ID DOT ID DOT ID LPAREN RPAREN .)
    GREATER         reduce using rule 34 (method_call -> ID DOT ID DOT ID LPAREN RPAREN .)
    EQ              reduce using rule 34 (method_call -> ID DOT ID DOT ID LPAREN RPAREN .)
    NEQ             reduce using rule 34 (method_call -> ID DOT ID DOT ID LPAREN RPAREN .)
    RPAREN          reduce using rule 34 (method_call -> ID DOT ID DOT ID LPAREN RPAREN .)


state 69

    (35) method_call -> ID DOT ID DOT ID LPAREN expression . RPAREN
    (19) relational_expression -> expression . LE expression
    (20) relational_expression -> expression . LESS expression
    (21) relational_expression -> expression . GE expression
    (22) relational_expression -> expression . GREATER expression
    (23) relational_expression -> expression . EQ expression
    (24) relational_expression -> expression . NEQ expression

    RPAREN          shift and go to state 71
    LE              shift and go to state 25
    LESS            shift and go to state 26
    GE              shift and go to state 27
    GREATER         shift and go to state 28
    EQ              shift and go to state 29
    NEQ             shift and go to state 30


state 70

    (13) for_statement -> FOR LPAREN assignment_expression SEMICOLON expression SEMICOLON assignment_expression . RPAREN compound_statement

    RPAREN          shift and go to state 72


state 71

    (35) method_call -> ID DOT ID DOT ID LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 35 (method_call -> ID DOT ID DOT ID LPAREN expression RPAREN .)
    TIMES           reduce using rule 35 (method_call -> ID DOT ID DOT ID LPAREN expression RPAREN .)
    PLUS            reduce using rule 35 (method_call -> ID DOT ID DOT ID LPAREN expression RPAREN .)
    LE              reduce using rule 35 (method_call -> ID DOT ID DOT ID LPAREN expression RPAREN .)
    LESS            reduce using rule 35 (method_call -> ID DOT ID DOT ID LPAREN expression RPAREN .)
    GE              reduce using rule 35 (method_call -> ID DOT ID DOT ID LPAREN expression RPAREN .)
    GREATER         reduce using rule 35 (method_call -> ID DOT ID DOT ID LPAREN expression RPAREN .)
    EQ              reduce using rule 35 (method_call -> ID DOT ID DOT ID LPAREN expression RPAREN .)
    NEQ             reduce using rule 35 (method_call -> ID DOT ID DOT ID LPAREN expression RPAREN .)
    RPAREN          reduce using rule 35 (method_call -> ID DOT ID DOT ID LPAREN expression RPAREN .)


state 72

    (13) for_statement -> FOR LPAREN assignment_expression SEMICOLON expression SEMICOLON assignment_expression RPAREN . compound_statement
    (12) compound_statement -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 10

    compound_statement             shift and go to state 73

state 73

    (13) for_statement -> FOR LPAREN assignment_expression SEMICOLON expression SEMICOLON assignment_expression RPAREN compound_statement .

    LBRACE          reduce using rule 13 (for_statement -> FOR LPAREN assignment_expression SEMICOLON expression SEMICOLON assignment_expression RPAREN compound_statement .)
    TYPE            reduce using rule 13 (for_statement -> FOR LPAREN assignment_expression SEMICOLON expression SEMICOLON assignment_expression RPAREN compound_statement .)
    FOR             reduce using rule 13 (for_statement -> FOR LPAREN assignment_expression SEMICOLON expression SEMICOLON assignment_expression RPAREN compound_statement .)
    ID              reduce using rule 13 (for_statement -> FOR LPAREN assignment_expression SEMICOLON expression SEMICOLON assignment_expression RPAREN compound_statement .)
    NUMBER          reduce using rule 13 (for_statement -> FOR LPAREN assignment_expression SEMICOLON expression SEMICOLON assignment_expression RPAREN compound_statement .)
    FLOAT           reduce using rule 13 (for_statement -> FOR LPAREN assignment_expression SEMICOLON expression SEMICOLON assignment_expression RPAREN compound_statement .)
    LPAREN          reduce using rule 13 (for_statement -> FOR LPAREN assignment_expression SEMICOLON expression SEMICOLON assignment_expression RPAREN compound_statement .)
    $end            reduce using rule 13 (for_statement -> FOR LPAREN assignment_expression SEMICOLON expression SEMICOLON assignment_expression RPAREN compound_statement .)
    RBRACE          reduce using rule 13 (for_statement -> FOR LPAREN assignment_expression SEMICOLON expression SEMICOLON assignment_expression RPAREN compound_statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 16 resolved as shift
WARNING: shift/reduce conflict for LE in state 43 resolved as shift
WARNING: shift/reduce conflict for LESS in state 43 resolved as shift
WARNING: shift/reduce conflict for GE in state 43 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 43 resolved as shift
WARNING: shift/reduce conflict for EQ in state 43 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 43 resolved as shift
WARNING: shift/reduce conflict for LE in state 44 resolved as shift
WARNING: shift/reduce conflict for LESS in state 44 resolved as shift
WARNING: shift/reduce conflict for GE in state 44 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 44 resolved as shift
WARNING: shift/reduce conflict for EQ in state 44 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 44 resolved as shift
WARNING: shift/reduce conflict for LE in state 45 resolved as shift
WARNING: shift/reduce conflict for LESS in state 45 resolved as shift
WARNING: shift/reduce conflict for GE in state 45 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 45 resolved as shift
WARNING: shift/reduce conflict for EQ in state 45 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 45 resolved as shift
WARNING: shift/reduce conflict for LE in state 46 resolved as shift
WARNING: shift/reduce conflict for LESS in state 46 resolved as shift
WARNING: shift/reduce conflict for GE in state 46 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 46 resolved as shift
WARNING: shift/reduce conflict for EQ in state 46 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 46 resolved as shift
WARNING: shift/reduce conflict for LE in state 47 resolved as shift
WARNING: shift/reduce conflict for LESS in state 47 resolved as shift
WARNING: shift/reduce conflict for GE in state 47 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 47 resolved as shift
WARNING: shift/reduce conflict for EQ in state 47 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 47 resolved as shift
WARNING: shift/reduce conflict for LE in state 48 resolved as shift
WARNING: shift/reduce conflict for LESS in state 48 resolved as shift
WARNING: shift/reduce conflict for GE in state 48 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 48 resolved as shift
WARNING: shift/reduce conflict for EQ in state 48 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 48 resolved as shift
WARNING: shift/reduce conflict for LE in state 53 resolved as shift
WARNING: shift/reduce conflict for LESS in state 53 resolved as shift
WARNING: shift/reduce conflict for GE in state 53 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 53 resolved as shift
WARNING: shift/reduce conflict for EQ in state 53 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 53 resolved as shift
